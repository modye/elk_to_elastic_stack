input {
	beats {
		port => 5044
	}
}

filter {

	 if [type] == "application" {

		grok {
			match => [ "message", "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{LOGLEVEL:level} %{NUMBER:pid} --- \[%{GREEDYDATA:thread}\] %{NOTSPACE:class}%{SPACE}: %{GREEDYDATA:message}"]
			overwrite => [ "message" ]
		}
		date {
			match => [ "timestamp", "ISO8601" ]
		}
	} else if [type] == "shop" {

		grok {
			match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} - %{NOTSPACE:action} %{NUMBER:client} %{NUMBER:product}"]
			overwrite => [ "message" ]
		}
		date {
			match => [ "timestamp", "ISO8601" ]
		}

	}

	if "_dateparsefailure" not in [tags] {
		mutate {
			remove_field => ["timestamp"]
		}
	}
}

output {
	# Logger dans la sortie standard la trame json générée
	stdout {
		codec => rubydebug
	}
	if "_dateparsefailure" in [tags] {
		file {
			path => "/home/maxime/Documents/talks/matinale_es/logs/failures/%{type}_date_failure.json"
		}
	} else if "_grokparsefailure" in [tags] {
		file {
			path => "/home/maxime/Documents/talks/matinale_es/logs/failures/%{type}_grok_failure.json"
		}
	} else {
		elasticsearch {
			hosts => "localhost"
			index => "sales-%{+YYYY.MM.dd}"
			document_type => "%{type}"
			template => "/home/maxime/Documents/talks/matinale_es/elk_to_elastic_stack/elk/sales_template.json"
	    template_name => "sales_template"
	    template_overwrite => true
			user => elastic
    	password => changeme
		}
	}
}
